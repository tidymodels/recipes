% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/string2hashbucket.R
\name{step_string2hashbucket}
\alias{step_string2hashbucket}
\alias{tidy.step_string2hashbucket}
\title{string2hashbucket Transformation}
\usage{
step_string2hashbucket(recipe, ..., role = NA, trained = FALSE, num_buckets,
  columns = NULL)

\method{tidy}{step_string2hashbucket}(x, ...)
}
\arguments{
\item{recipe}{A recipe object. The step will be added to the
sequence of operations for this recipe.}

\item{...}{One or more selector functions to choose which
variables are affected by the step. See \code{\link[=selections]{selections()}}
for more details.  For the \code{tidy} method, these are not
currently used.}

\item{role}{Not used by this step since no new variables are
created.}

\item{trained}{A logical to indicate if the quantities for
preprocessing have been estimated.}

\item{num_buckets}{The number of buckets, must be >= 1.}

\item{columns}{A character string of variable names that will
be (eventually) populated by the \code{terms} argument.}

\item{x}{A \code{step_string2hashbucket} object.}
}
\value{
An updated version of \code{recipe} with the new step
added to the sequence of existing steps (if any). For the
\code{tidy} method, a tibble with columns \code{terms} (the
columns that will be affected) and \code{num_buckets}.
}
\description{
\code{step_string2hashbucket()} creates a \emph{specification} of a recipe step
that will convert each element of the character column to its hash mod
by \code{num_buckets}. The hash function is deterministic on the content
of the string.
}
\seealso{
\code{\link[=recipe]{recipe()}} \code{\link[=prep.recipe]{prep.recipe()}}
\code{\link[=bake.recipe]{bake.recipe()}}
}
\concept{
preprocessing transformation_methods
}
\keyword{datagen}
